using Microsoft.SemanticKernel.ChatCompletion;

namespace Hramos.API.Abstractions;

/// <summary>
/// Represents a collection of functions to work chat answers.
/// </summary>
public interface IChatAnswer
{
    /// <summary>
    /// Generate an answer using an AI model, via the user's prompt.
    /// </summary>
    /// <param name="prompt">Prompt received from the user.</param>
    /// <param name="cancellationToken">  A cancellation token that can be used to receive notice of cancellation.</param>
    /// <returns>Answer generated by the AI model.</returns>
    Task<string> GetAnswerFromUserPromptAsync(string prompt, CancellationToken cancellationToken);

    /// <summary>
    /// Get a summary from the user prompt.
    /// </summary>
    /// <param name="lang">Language to translate the text to.</param>
    /// <param name="input">Text to translate.</param>
    /// <param name="cancellationToken">  A cancellation token that can be used to receive notice of cancellation.</param>
    /// <returns>The translated text by the AI model.</returns>
    Task<string> GetTranslatedTextFromUserPromptAsync(string lang, string input, CancellationToken cancellationToken);

    /// <summary>
    /// Get an answer using an AI model, with stored information.
    /// </summary>
    /// <param name="context">Context of the conversation, with information stored in the database.</param>
    /// <param name="input">Text received from the user.</param>
    /// <param name="cancellationToken">  A cancellation token that can be used to receive notice of cancellation.</param>
    /// <returns>Answer generated by the AI model.</returns>
    Task<string> GetAnswerFromUserWithSavedInfoAsync(string context, string input, string? locale, CancellationToken cancellationToken);

    /// <summary>
    /// Get an answer using an AI model, with chat history.
    /// </summary>
    /// <param name="chatHistory">History from the conversation</param>
    /// <param name="input">Text received from the user.</param>
    /// <param name="locale">Language to translate the text to.</param>
    /// <param name="cancellationToken">  A cancellation token that can be used to receive notice of cancellation.</param>
    /// <returns>Answer generated by the AI model.</returns>
    Task<string> GetAnswerWithChatHistoryAsync(ChatHistory chatHistory, string input, string? locale, CancellationToken cancellationToken);
}
